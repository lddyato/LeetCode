import java.util.HashMap;
import java.util.Map;

/**
 * Given two strings s and t which consist of only lowercase letters.
 * String t is generated by random shuffling string s and then add one more letter at a random position.
 * Find the letter that was added in t.
 * Example:
 * Input:
 * s = "abcd"
 * t = "abcde"
 * <p>
 * Output:
 * e
 * <p>
 * Explanation:
 * 'e' is the letter that was added.
 */

public class Find_the_Difference {
    //错的，最后int转char有问题
    public char findTheDifference(String s, String t) {
        HashMap<Integer, Integer> map = new HashMap<>();
        for (int i = 0; i < s.length(); i++) {
            map.put(Integer.valueOf(s.charAt(i)), map.getOrDefault(Integer.valueOf(s.charAt(i)), 0) + 1);
        }
        for (int i = 0; i < t.length(); i++) {
            Integer n = Integer.valueOf(t.charAt(i));
            if (map.containsKey(n)) {
                map.put(n, map.get(n) - 1);
            } else {
                return t.charAt(i);
            }
        }
        for (Map.Entry<Integer, Integer> entry : map.entrySet()) {
            if (entry.getValue() != 0) {
//                System.out.println(entry.getKey());
//                String str=String.valueOf(entry.getKey());
//                char[] result=str.toCharArray();
                return (char) (int) entry.getValue();
            }
        }
        return 0;
    }

    //异或
    public char findTheDifference1(String s, String t) {
        char c = 0;
        for (int i = 0; i < s.length(); ++i) {
            c ^= s.charAt(i);
        }
        for (int i = 0; i < t.length(); ++i) {
            c ^= t.charAt(i);
        }
        return c;
    }

    public char findTheDifference2(String s, String t) {
        int n = t.length();
        char c = t.charAt(n - 1);
        for (int i = 0; i < n - 1; ++i) {
            c ^= s.charAt(i);
            c ^= t.charAt(i);
        }
        return c;
    }

//    public char findTheDifference3(String s,String t){
//        for (int i = 0; i < 26; i++) alpha[i] = 0;
//        for (char c : s.toCharArray())
//            alpha[ c - 'a' ]++;
//
//        for (char c : t.toCharArray()) {
//            //could do decrement first, then check but yeah
//            if (--alpha[c - 'a'] < 0)
//                return c;
//        }
//
//        return 0;
//    }

    public static void main(String[] args) {
        Find_the_Difference find_the_difference = new Find_the_Difference();
        String s = "a";
        String t = "aa";
        find_the_difference.findTheDifference(s, t);

    }
}
